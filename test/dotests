#!/usr/bin/perl

$VERBOSE=1;

sub usage()
{
	print STDERR "Usage: $0 <binding> [<binding> ...]\n";
	print STDERR " recognized bindings are: C, PERL, PHP, PYTHON\n";
	exit(1);
}

if (@ARGV < 1)
{
	usage();
}

$do_test_c=0;
$do_test_perl=0;
$do_test_php=0;
$do_test_python=0;
while (@ARGV)
{
	$arg = shift(@ARGV);

	if ( $arg =~ /^c$/i )
	{
		$do_test_c=1;
	}
	elsif ( $arg =~ /^perl$/i )
	{
		$do_test_perl=1;
	}
	elsif ( $arg =~ /^php$/i )
	{
		$do_test_php=1;
	}
	elsif ( $arg =~ /^python$/i )
	{
		$do_test_python=1;
	}
	else
	{
		usage();
	}

}

if ( $VERBOSE ) {
	print "Test c: ", $do_test_c, "\n";
	print "Test perl: ", $do_test_perl, "\n";
	print "Test python: ", $do_test_python, "\n";
	print "Test php: ", $do_test_php, "\n";
}


$failures=0;

sub doswftest($$)
{
local($test,$testprog)=@_;

$testswf = "./$test.swf";
$testref = "./$test.ref";

print "executing $testprog\n";
if( ! -r $testprog ) {
	printf  STDERR "$test failed. $testprog does not exist\n";
	++$failures;
	return 0;
}
if( ! -x $testprog ) {
	printf  STDERR "$test failed. $testprog not executable\n";
	++$failures;
	return 0;
}
if( -r $testswf ) {
	system("rm -f $testswf");
}

system($testprog);

if( ! -r $testswf ) {
	printf  STDERR "$test failed. $testswf not created\n";
	++$failures;
	return 0;
}
if( ! -r $testref ) {
	printf  STDERR "$test failed. $testref does not exist\n";
	++$failures;
	return 0;
}
if( system("listswf $testswf | diff - $testref >/dev/null 2>&1") ) {
	printf  STDERR "$test failed. problem comparing against $testref\n";
	++$failures;
	return 0;
}
return 1;
}

sub dotestset($)
{
local($depth) = @_;

local %test;

local $TESTLIST;

print "dotestset depth $depth\n";

open($TESTLIST,"<TestList") || die "Can't find test list";
while(<$TESTLIST>) {
	@test = split(':');
	if( $test[1] eq "swf" ) {
		$test = $test[0];
		$testexe = "./".$test[0];
		$testphp = "./".$test[0].".php";
		$testpl = "./".$test[0].".pl";
		$testpy = "./".$test[0].".py";
		if ( $do_test_c ) {
			doswftest($test,$testexe);
		}
		if ( $do_test_php ) {
			doswftest($test,$testphp);
		}
		if ( $do_test_perl ) {
			doswftest($test,$testpl);
		}
		if ( $do_test_python ) {
			doswftest($test,$testpy);
		}
	} elsif ( $test[1] eq "dir" ) {
		print "doing tests in ".$test[0]."\n";
		chdir $test[0] || die "Can't cd to ".$test[0]."\n";
		dotestset($depth+1);
		chdir ".." || die "Can't cd ..";
		print "done in ".$test[0]."\n";
	} else {
		print STDERR "Don't know how to handle test type ".$test[1]."\n";
	}
}
print "End of loop for depth $depth\n";
close(TESTLIST);
}

dotestset(0);

exit $failures;
